
/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Helvetica; fontsize=18; labelloc=t
label=Linear_OR

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; penwidth=0

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Helvetica]

/* Nodes representing atomic programs in workflow */
"core/text-transform0#" [shape=record rankdir=LR label="{<f0> core/text-transform0# |<f1> Text transform on cells in column created_at using expression value.toDate()}"];
"core/row-removal0#" [shape=record rankdir=LR label="{<f0> core/row-removal0# |<f1> Remove rows}"];
"core/text-transform1#" [shape=record rankdir=LR label="{<f0> core/text-transform1# |<f1> Text transform on cells in column price using expression value.toNumber()}"];
"core/text-transform2#" [shape=record rankdir=LR label="{<f0> core/text-transform2# |<f1> Text transform on cells in column high_price using expression value.toNumber()}"];
"core/text-transform3#" [shape=record rankdir=LR label="{<f0> core/text-transform3# |<f1> Text transform on cells in column high_price using expression grel\:if(isNull(value), cells[\"prices\"].value, value)}"];
"core/text-transform4#" [shape=record rankdir=LR label="{<f0> core/text-transform4# |<f1> Text transform on cells in column high_price using expression grel\:if(isNull(value), cells[\"price\"].value, value)}"];
"core/column-addition0#" [shape=record rankdir=LR label="{<f0> core/column-addition0# |<f1> Create column dish_name at index 1 based on column id using expression grel\:cell.cross(\"NYPL_Dish\", \"id\").cells[\"name\"].value[0]}"];
"core/row-removal1#" [shape=record rankdir=LR label="{<f0> core/row-removal1# |<f1> Remove rows}"];
"core/column-addition1#" [shape=record rankdir=LR label="{<f0> core/column-addition1# |<f1> Create column menu_id at index 3 based on column menu_page_id using expression grel\:cell.cross(\"NYPL_MenuPage\", \"id\").cells[\"menu_id\"].value[0]}"];
"core/column-addition2#" [shape=record rankdir=LR label="{<f0> core/column-addition2# |<f1> Create column currency at index 4 based on column menu_id using expression grel\:cell.cross(\"NYPL_Menu\", \"id\").cells[\"currency\"].value[0]}"];
"core/column-addition3#" [shape=record rankdir=LR label="{<f0> core/column-addition3# |<f1> Create column menu_date at index 4 based on column menu_id using expression grel\:cell.cross(\"NYPL_Menu\", \"id\").cells[\"date\"].value[0]}"];
"core/text-transform5#" [shape=record rankdir=LR label="{<f0> core/text-transform5# |<f1> Text transform on cells in column menu_date using expression value.toDate()}"];
"core/text-transform6#" [shape=record rankdir=LR label="{<f0> core/text-transform6# |<f1> Text transform on cells in column menu_date using expression value.toDate()}"];
"core/row-removal2#" [shape=record rankdir=LR label="{<f0> core/row-removal2# |<f1> Remove rows}"];
"core/row-removal3#" [shape=record rankdir=LR label="{<f0> core/row-removal3# |<f1> Remove rows}"];
"core/column-addition4#" [shape=record rankdir=LR label="{<f0> core/column-addition4# |<f1> Create column dish_type at index 2 based on column dish_name using expression grel\:if(}"];
"core/column-addition5#" [shape=record rankdir=LR label="{<f0> core/column-addition5# |<f1> Create column normalized_dish_name at index 2 based on column dish_name using expression grel\:filter(}"];
"core/row-removal4#" [shape=record rankdir=LR label="{<f0> core/row-removal4# |<f1> Remove rows}"];

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
table18
table0
table1
table2
table3
table4
table5
table6
table7
table8
table9
table10
table11
table12
table13
table14
table15
table16
table17

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */
"col-name:created_at"
"expression:value.toDate()"
"col-name:price"
"expression:\"isBlank(value)\""
"expression:value.toNumber()"
"col-name:high_price"
"expression:grel:if(isNull(value),_cells[\"prices\"].value,_value)"
"expression:grel:if(isNull(value),_cells[\"price\"].value,_value)"
"col-name:id"
"col-name:dish_name"
"expression:\"grel:isNull(value)\""
"col-name:menu_page_id"
"col-name:menu_id"
"col-name:menu_date"
"col-name:currency"
"expression:\"grel:value_==_\"Dollars\"\""
"expression:\"grel:or("

/* Edges representing connections between programs and channels */
"core/text-transform0#" -> table1
"col-name:created_at" -> "core/text-transform0#"
"expression:value.toDate()" -> "core/text-transform0#"
table0 -> "core/text-transform0#"
"core/row-removal0#" -> table2
"col-name:price" -> "core/row-removal0#"
"expression:\"isBlank(value)\"" -> "core/row-removal0#"
table1 -> "core/row-removal0#"
"core/text-transform1#" -> table3
"col-name:price" -> "core/text-transform1#"
"expression:value.toNumber()" -> "core/text-transform1#"
table2 -> "core/text-transform1#"
"core/text-transform2#" -> table4
"col-name:high_price" -> "core/text-transform2#"
"expression:value.toNumber()" -> "core/text-transform2#"
table3 -> "core/text-transform2#"
"core/text-transform3#" -> table5
"col-name:high_price" -> "core/text-transform3#"
"expression:grel:if(isNull(value),_cells[\"prices\"].value,_value)" -> "core/text-transform3#"
table4 -> "core/text-transform3#"
"core/text-transform4#" -> table6
"col-name:high_price" -> "core/text-transform4#"
"expression:grel:if(isNull(value),_cells[\"price\"].value,_value)" -> "core/text-transform4#"
table5 -> "core/text-transform4#"
"core/column-addition0#" -> table7
"col-name:id" -> "core/column-addition0#"
"newColumnName:\"dish_name\"" -> "core/column-addition0#"
table6 -> "core/column-addition0#"
"core/row-removal1#" -> table8
"col-name:dish_name" -> "core/row-removal1#"
"expression:\"grel:isNull(value)\"" -> "core/row-removal1#"
table7 -> "core/row-removal1#"
"core/column-addition1#" -> table9
"col-name:menu_page_id" -> "core/column-addition1#"
"newColumnName:\"menu_id\"" -> "core/column-addition1#"
table8 -> "core/column-addition1#"
"core/column-addition2#" -> table10
"col-name:menu_id" -> "core/column-addition2#"
"newColumnName:\"currency\"" -> "core/column-addition2#"
table9 -> "core/column-addition2#"
"core/column-addition3#" -> table11
"col-name:menu_id" -> "core/column-addition3#"
"newColumnName:\"menu_date\"" -> "core/column-addition3#"
table10 -> "core/column-addition3#"
"core/text-transform5#" -> table12
"col-name:menu_date" -> "core/text-transform5#"
"expression:value.toDate()" -> "core/text-transform5#"
table11 -> "core/text-transform5#"
"core/text-transform6#" -> table13
"col-name:menu_date" -> "core/text-transform6#"
"expression:value.toDate()" -> "core/text-transform6#"
table12 -> "core/text-transform6#"
"core/row-removal2#" -> table14
"col-name:currency" -> "core/row-removal2#"
"expression:\"grel:value_==_\"Dollars\"\"" -> "core/row-removal2#"
table13 -> "core/row-removal2#"
"core/row-removal3#" -> table15
"col-name:dish_name" -> "core/row-removal3#"
"expression:\"grel:or(" -> "core/row-removal3#"
table14 -> "core/row-removal3#"
"core/column-addition4#" -> table16
"col-name:dish_name" -> "core/column-addition4#"
"newColumnName:\"dish_type\"" -> "core/column-addition4#"
table15 -> "core/column-addition4#"
"core/column-addition5#" -> table17
"col-name:dish_name" -> "core/column-addition5#"
"newColumnName:\"normalized_dish_name\"" -> "core/column-addition5#"
table16 -> "core/column-addition5#"
"core/row-removal4#" -> table18
"col-name:menu_date" -> "core/row-removal4#"
"expression:\"grel:isNull(value)\"" -> "core/row-removal4#"
table17 -> "core/row-removal4#"

/* End of double cluster for drawing box around nodes in workflow */
}}

/* End of top-level graph */
}
